{"version":3,"sources":["components/TodoItem.module.css","components/TodoItem.js","components/TodoList.js","components/Header.js","components/InputTodo.js","components/Navbar.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","components/TodoContainer.js","index.js"],"names":["module","exports","TodoItem","props","useState","editing","state","setState","todo","id","completed","title","viewMode","editMode","display","useEffect","console","log","className","styles","item","onDoubleClick","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","color","fontSize","fontStyle","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","key","TodoList","todos","map","Header","padding","lineHeight","fontWeight","marginBottom","textTransform","textAlign","InputTodo","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","Navbar","navbarOpen","setNavbarOpen","width","height","path","text","link","to","exact","activeClassName","SinglePage","slug","useParams","description","find","About","useRouteMatch","url","NotMatch","getInitialTodos","temp","localStorage","getItem","JSON","parse","TodoContainer","setItem","stringify","newTodo","uuidv4","filter","updatedTitle","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,UAAY,8B,sLC8EnFC,EA1EE,SAACC,GAChB,MAA0BC,mBAAS,CAAEC,SAAS,IAA9C,mBAAOC,EAAP,KAAcC,EAAd,KASA,EAA2CJ,EAAnCK,KAAQC,EAAhB,EAAgBA,GAAIC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,MAMzBC,EAAW,GACXC,EAAW,GAEbP,EAAMD,QACRO,EAASE,QAAU,OAEnBD,EAASC,QAAU,OAarB,OAJAC,qBAAU,kBAAM,WACdC,QAAQC,IAAI,kBACX,IAGD,qBAAIC,UAAWC,IAAOC,KAAtB,UACE,sBAAKC,cAzBa,WACpBd,EAAS,CAAEF,SAAS,KAwBiBiB,MAAOV,EAA1C,UACE,uBACEW,KAAK,WACLL,UAAWC,IAAOK,SAClBC,QAASf,EACTgB,SAAU,kBAAMvB,EAAMwB,kBAAkBlB,MAE1C,wBAAQc,KAAK,SAASK,QAAS,kBAAMzB,EAAM0B,gBAAgBpB,IAA3D,SACE,cAAC,IAAD,CAASa,MAAO,CAAEQ,MAAO,YAAaC,SAAU,YAElD,sBAAMT,MAAOZ,EA5CI,CACrBsB,UAAW,SACXF,MAAO,UACPG,QAAS,GACTC,eAAgB,gBAwC8B,KAA1C,SAAiDvB,OAEnD,uBACEY,KAAK,OACLD,MAAOT,EACPK,UAAWC,IAAOgB,UAClBC,MAAOzB,EACPe,SAAU,SAACW,GACTlC,EAAMmC,UAAUD,EAAEE,OAAOH,MAAO3B,IAElC+B,UAhCoB,SAACH,GACX,UAAVA,EAAEI,KACJlC,EAAS,CAAEF,SAAS,WCFXqC,EA3BE,SAAC,GAAD,IACfC,EADe,EACfA,MAAOhB,EADQ,EACRA,kBAAmBE,EADX,EACWA,gBAAiBS,EAD5B,EAC4BA,UAD5B,OAGf,6BACGK,EAAMC,KAAI,SAACpC,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNmB,kBAAmBA,EACnBE,gBAAiBA,EACjBS,UAAWA,GAJN9B,EAAKC,UCcHoC,EAvBA,WAKb,OACE,wBAAQvB,MALU,CAClBwB,QAAS,SACTC,WAAY,SAGZ,SACE,oBAAIzB,MAAO,CACTS,SAAU,OACViB,WAAY,MACZC,aAAc,OACdF,WAAY,MACZjB,MAAO,UACPoB,cAAe,YACfC,UAAW,UAPb,sB,QC6CSC,EAhDG,SAACjD,GACjB,MAA0BC,mBAAS,CACjCO,MAAO,KADT,mBAAOL,EAAP,KAAcC,EAAd,KAwBA,OACE,uBAAM8C,SAfa,SAAChB,GACpBA,EAAEiB,iBAEEhD,EAAMK,MAAM4C,QACdpD,EAAMqD,aAAalD,EAAMK,OACzBJ,EAAS,2BACJD,GADG,IAENK,MAAO,OAGT8C,MAAM,sBAKsBvC,UAAU,iBAAxC,UACE,uBACEK,KAAK,OACLL,UAAU,aACVwC,YAAY,cACZtB,MAAO9B,EAAMK,MACbgD,KAAK,QACLjC,SA5BW,SAACW,GAChB9B,EAAS,eACN8B,EAAEE,OAAOoB,KAAOtB,EAAEE,OAAOH,WA4B1B,wBAAQb,KAAK,SAASL,UAAU,eAAhC,SACE,cAAC,IAAD,CACEI,MAAO,CAAEQ,MAAO,WAAYC,SAAU,UAAW6B,UAAW,oB,gBCWvDC,EA9CA,WACb,MAAoCzD,oBAAS,GAA7C,mBAAO0D,EAAP,KAAmBC,EAAnB,KAmBA,OACE,sBAAK7C,UAAU,SAAf,UACE,wBAAQK,KAAK,SAASK,QAAS,kBAAMmC,GAAeD,IAApD,SACGA,EACC,cAAC,IAAD,CAASxC,MAAO,CAAEQ,MAAO,OAAQkC,MAAO,SAAUC,OAAQ,YAE1D,cAAC,IAAD,CAAQ3C,MAAO,CAAEQ,MAAO,UAAWkC,MAAO,SAAUC,OAAQ,cAGhE,oBAAI/C,UAAS,kBAAa4C,EAAa,YAAc,IAArD,SA1BU,CACZ,CACErD,GAAI,EACJyD,KAAM,IACNC,KAAM,QAER,CACE1D,GAAI,EACJyD,KAAM,SACNC,KAAM,UAkBGvB,KAAI,SAACwB,GAAD,OACT,6BACE,cAAC,IAAD,CACEC,GAAID,EAAKF,KACTI,OAAK,EACLC,gBAAgB,cAChB3C,QAAS,WAnBnBmC,GAAc,IAeN,SAMGK,EAAKD,QAPDC,EAAK3D,aCTT+D,EA1BI,WACjB,IAeQC,EAASC,cAATD,KACR,EAhBkB,CAChB,CACEA,KAAM,YACN9D,MAAO,gBACPgE,YACE,0TAEJ,CACEF,KAAM,eACN9D,MAAO,mBACPgE,YACE,sLAKmCC,MAAK,SAACxD,GAAD,OAAUA,EAAKqD,OAASA,KAA9D9D,EAAR,EAAQA,MAAOgE,EAAf,EAAeA,YAEf,OACE,sBAAKzD,UAAU,gBAAf,UACE,6BAAKP,IACL,4BAAIgE,QCAKE,EAnBD,WACZ,MAAsBC,cAAdC,EAAR,EAAQA,IAAKb,EAAb,EAAaA,KACb,OACE,sBAAKhD,UAAU,iBAAf,UACE,qBAAIA,UAAU,cAAd,UACE,6BACE,cAAC,IAAD,CAAMmD,GAAE,UAAKU,EAAL,cAAR,yBAEF,6BACE,cAAC,IAAD,CAAMV,GAAE,UAAKU,EAAL,iBAAR,+BAGJ,cAAC,IAAD,CAAOb,KAAI,UAAKA,EAAL,UAAX,SACE,cAAC,EAAD,UCbOc,EALE,kBACf,8BACE,2DCSJ,SAASC,IACP,IAAMC,EAAOC,aAAaC,QAAQ,SAElC,MAAO,CAAEzC,MADU0C,KAAKC,MAAMJ,IACA,IAGhC,IAsEeK,EAtEO,WACpB,MAA0BnF,mBAAS6E,GAAnC,mBAAO3E,EAAP,KAAcC,EAAd,KAEAQ,qBAAU,WACRoE,aAAaK,QAAQ,QAASH,KAAKI,UAAUnF,EAAMqC,UAClD,CAACrC,EAAMqC,QAqCV,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,OAAK,EAACJ,KAAK,IAAlB,SACE,qBAAKhD,UAAU,YAAf,SACE,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWsC,aAhCH,SAAC7C,GACnB,IAAM+E,EAAU,CACdjF,GAAIkF,cACJhF,QACAD,WAAW,GAEbH,EAAS,CAAEoC,MAAM,GAAD,mBAAMrC,EAAMqC,OAAZ,CAAmB+C,SA2BzB,cAAC,EAAD,CACE/C,MAAOrC,EAAMqC,MACbhB,kBA9CO,SAAClB,GACpBF,EAAS,CACPoC,MAAOrC,EAAMqC,MAAMC,KAAI,SAACpC,GACtB,OAAIA,EAAKC,KAAOA,EACP,2BAAKD,GAAZ,IAAkBE,WAAYF,EAAKE,YAE9BF,QAyCCqB,gBA3BE,SAACpB,GACfF,EAAS,CAAEoC,MAAOrC,EAAMqC,MAAMiD,QAAO,SAACpF,GAAD,OAAUA,EAAKC,KAAOA,QA2B/C6B,UAxBI,SAACuD,EAAcpF,GAC/BF,EAAS,CACPoC,MAAOrC,EAAMqC,MAAMC,KAAI,SAACpC,GACtB,OAAIA,EAAKC,KAAOA,EACP,2BAAKD,GAAZ,IAAkBG,MAAOkF,IAEpBrF,iBAuBP,cAAC,IAAD,CAAO0D,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,aC1EV4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAUC,sBAAlB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.7888ff83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__1M1-z\",\"checkbox\":\"TodoItem_checkbox__18sUt\",\"textInput\":\"TodoItem_textInput__3XR8t\"};","import { useState, useEffect } from 'react';\nimport { FaTrash } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport styles from './TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  const [state, setState] = useState({ editing: false });\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  const { todo: { id, completed, title } } = props;\n\n  const handleEditing = () => {\n    setState({ editing: true });\n  };\n\n  const viewMode = {};\n  const editMode = {};\n\n  if (state.editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  const handleUpdatedDone = (e) => {\n    if (e.key === 'Enter') {\n      setState({ editing: false });\n    }\n  };\n\n  useEffect(() => () => {\n    console.log('Cleaning Up');\n  }, []);\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <button type=\"button\" onClick={() => props.deleteTodoProps(id)}>\n          <FaTrash style={{ color: 'orangered', fontSize: '1rem' }} />\n        </button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={(e) => {\n          props.setUpdate(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  setUpdate: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({\n  todos, handleChangeProps, deleteTodoProps, setUpdate,\n}) => (\n  <ul>\n    {todos.map((todo) => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        handleChangeProps={handleChangeProps}\n        deleteTodoProps={deleteTodoProps}\n        setUpdate={setUpdate}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  setUpdate: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","const Header = () => {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n  return (\n    <header style={headerStyle}>\n      <h1 style={{\n        fontSize: '6rem',\n        fontWeight: '600',\n        marginBottom: '2rem',\n        lineHeight: '1em',\n        color: '#ececec',\n        textTransform: 'lowercase',\n        textAlign: 'center',\n      }}\n      >\n        todos\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useState } from 'react';\nimport { FaPlusCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nconst InputTodo = (props) => {\n  const [state, setState] = useState({\n    title: '',\n  });\n\n  const onChange = (e) => {\n    setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (state.title.trim()) {\n      props.addTodoProps(state.title);\n      setState({\n        ...state,\n        title: '',\n      });\n    } else {\n      alert('Please write item');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add Todo...\"\n        value={state.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <button type=\"button\" className=\"input-submit\">\n        <FaPlusCircle\n          style={{ color: 'darkcyan', fontSize: '1.25rem', marginTop: '0.125rem' }}\n        />\n      </button>\n    </form>\n  );\n};\n\nInputTodo.propTypes = {\n  addTodoProps: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","import { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\n\nimport { MdClose } from 'react-icons/md';\nimport { FiMenu } from 'react-icons/fi';\n\nconst Navbar = () => {\n  const [navbarOpen, setNavbarOpen] = useState(false);\n\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/about',\n      text: 'About',\n    },\n  ];\n\n  const closeMenu = () => {\n    setNavbarOpen(false);\n  };\n\n  return (\n    <nav className=\"navBar\">\n      <button type=\"button\" onClick={() => setNavbarOpen(!navbarOpen)}>\n        {navbarOpen ? (\n          <MdClose style={{ color: '#fff', width: '2.5rem', height: '2.5rem' }} />\n        ) : (\n          <FiMenu style={{ color: '#7b7b7b', width: '2.5rem', height: '2.5rem' }} />\n        )}\n      </button>\n      <ul className={`menuNav ${navbarOpen ? ' showMenu' : ''}`}>\n        {links.map((link) => (\n          <li key={link.id}>\n            <NavLink\n              to={link.path}\n              exact\n              activeClassName=\"active-link\"\n              onClick={() => closeMenu()}\n            >\n              {link.text}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\nexport default Navbar;\n","import { useParams } from 'react-router-dom';\n\nconst SinglePage = () => {\n  const aboutData = [\n    {\n      slug: 'about-app',\n      title: 'About the App',\n      description:\n        'In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.',\n    },\n    {\n      slug: 'about-author',\n      title: 'About the Author',\n      description:\n        'This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.',\n    },\n  ];\n\n  const { slug } = useParams();\n  const { title, description } = aboutData.find((item) => item.slug === slug);\n\n  return (\n    <div className=\"main__content\">\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  );\n};\nexport default SinglePage;\n","import React from 'react';\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\n\nimport SinglePage from './SinglePage';\n\nconst About = () => {\n  const { url, path } = useRouteMatch();\n  return (\n    <div className=\"about__content\">\n      <ul className=\"about__list\">\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n        <li>\n          <Link to={`${url}/about-author`}>About Author</Link>\n        </li>\n      </ul>\n      <Route path={`${path}/:slug`}>\n        <SinglePage />\n      </Route>\n    </div>\n  );\n};\n\nexport default About;\n","const NotMatch = () => (\n  <div>\n    <h3>No match for this page</h3>\n  </div>\n);\nexport default NotMatch;\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Route, Switch } from 'react-router-dom';\nimport TodosList from './TodoList';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport Navbar from './Navbar';\n\nimport About from '../pages/About';\nimport NotMatch from '../pages/NotMatch';\n\nfunction getInitialTodos() {\n  const temp = localStorage.getItem('todos');\n  const savedTodos = JSON.parse(temp);\n  return { todos: savedTodos || [] };\n}\n\nconst TodoContainer = () => {\n  const [state, setState] = useState(getInitialTodos);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(state.todos));\n  }, [state.todos]);\n\n  const handleChange = (id) => {\n    setState({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, completed: !todo.completed };\n        }\n        return todo;\n      }),\n    });\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false,\n    };\n    setState({ todos: [...state.todos, newTodo] });\n  };\n\n  const delTodo = (id) => {\n    setState({ todos: state.todos.filter((todo) => todo.id !== id) });\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setState({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, title: updatedTitle };\n        }\n        return todo;\n      }),\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <div className=\"inner\">\n              <Header />\n              <InputTodo addTodoProps={addTodoItem} />\n              <TodosList\n                todos={state.todos}\n                handleChangeProps={handleChange}\n                deleteTodoProps={delTodo}\n                setUpdate={setUpdate}\n              />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"*\">\n          <NotMatch />\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\nimport TodoContainer from './components/TodoContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}